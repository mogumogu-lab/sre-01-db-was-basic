services:
  was1:
    build:
      context: ./was1
      dockerfile: Dockerfile
    container_name: was1
    ports:
      - "53000:3000"
    environment:
      - POSTGRES_HOST=postgres_defense
      - POSTGRES_PORT=5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres_defense
    networks:
      - defense
    volumes:
      - ./was1:/app
    working_dir: /app
    command: pnpm dev
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4g

  was2:
    build:
      context: ./was2
      dockerfile: Dockerfile
    container_name: was2
    ports:
      - "53001:3000"
    environment:
      - POSTGRES_HOST=postgres_defense
      - POSTGRES_PORT=5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres_defense
    networks:
      - defense
    volumes:
      - ./was2:/app
    working_dir: /app
    command: pnpm dev
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4g

  postgres:
    image: postgres:latest
    container_name: postgres_defense
    command: postgres -p 55432 
    ports:
      - "55432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres_defense
    volumes:
      - ./was2/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata_defense:/var/lib/postgresql/data
    networks:
      - defense
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4g

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "58080:8080"
    networks:
      - defense
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  iperf3-server:
    image: networkstatic/iperf3
    container_name: iperf3-server
    command: -s
    ports:
      - "5201:5201"
    networks:
      - defense

networks:
  defense:
    driver: bridge

volumes:
  pgdata_defense: